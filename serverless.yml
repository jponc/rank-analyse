service: rank-analyse

package:
  exclude:
  - ./**
  include:
  - ./bin/**

provider:
  name: aws
  runtime: go1.x
  profile: uptactics
  memorySize: 128
  region: us-east-1 # US East 1 (N. Virginia)
  stage: ${opt:stage, 'staging'}
  lambdaHashingVersion: "20201221"
  apiGateway:
    shouldStartNameWithService: true
  tracing:
    apiGateway: true
    lambda: true

functions:
  # == Authorizers ==
  Authoriser:
    handler: bin/Authoriser
    environment:
      JWT_SECRET: ${self:custom.env.JWT_SECRET}

  # == HTTP ==
  Healthcheck:
    handler: bin/Healthcheck
    events:
      - http:
          path: /healthcheck
          method: get

  LambdaTest:
    handler: bin/LambdaTest
    vpc: ${self:custom.${self:provider.stage}.vpc}
    events:
      - http:
          path: /lambda-test
          method: get
          authorizer:
            name: Authoriser
            resultTtlInSeconds: 0

custom:
  env:
    JWT_SECRET: ${ssm:/${self:service}/${self:provider.stage}/JWT_SECRET~true}
  staging:
    vpc:
      securityGroupIds: ${ssm:/uptactics/${self:provider.stage}/DEFAULT_SECURITY_GROUP}
      subnetIds: ${ssm:/uptactics/${self:provider.stage}/PRIVATE_SUBNET_IDS~split}
  production:
    vpc:
      securityGroupIds: ${ssm:/uptactics/${self:provider.stage}/DEFAULT_SECURITY_GROUP}
      subnetIds: ${ssm:/uptactics/${self:provider.stage}/PRIVATE_SUBNET_IDS~split}
